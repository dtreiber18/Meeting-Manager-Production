name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-and-deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install frontend dependencies
      working-directory: frontend
      run: npm ci
    
    - name: Build frontend for GitHub Pages
      working-directory: frontend
      run: |
        # Build with GitHub Pages configuration
        npm run build -- --configuration=github-pages
        
        # Create 404.html for client-side routing
        cp dist/frontend/index.html dist/frontend/404.html
        
        # Create .nojekyll file to prevent Jekyll processing
        touch dist/frontend/.nojekyll
        
        # Create robots.txt for better SEO
        cat > dist/frontend/robots.txt << 'EOF'
        User-agent: *
        Allow: /
        
        Sitemap: https://dtreiber18.github.io/Meeting-Manager-Production/sitemap.xml
        EOF
    
    - name: Setup Pages
      uses: actions/configure-pages@v4
      with:
        enablement: true
    
    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: frontend/dist/frontend
    
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
    
    - name: Display deployment URL
      run: |
        echo "🚀 Application deployed successfully!"
        echo "📱 Live URL: ${{ steps.deployment.outputs.page_url }}"
        echo "📝 The application is now accessible at the above URL"
        echo ""
        echo "Note: It may take a few minutes for changes to be visible"
